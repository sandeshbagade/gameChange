// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dashboard-> Dashboard snapshot test 1`] = `
<Dashboard>
  <div>
    <WithStyles(CssBaseline)>
      <CssBaseline
        classes={Object {}}
      />
    </WithStyles(CssBaseline)>
    <main
      className="makeStyles-content-2"
    >
      <div />
      <WithStyles(ForwardRef(Drawer))
        classes={
          Object {
            "paper": "makeStyles-paper-4",
          }
        }
        variant="permanent"
      >
        <ForwardRef(Drawer)
          classes={
            Object {
              "docked": "MuiDrawer-docked",
              "modal": "MuiDrawer-modal",
              "paper": "MuiDrawer-paper makeStyles-paper-4",
              "paperAnchorBottom": "MuiDrawer-paperAnchorBottom",
              "paperAnchorDockedBottom": "MuiDrawer-paperAnchorDockedBottom",
              "paperAnchorDockedLeft": "MuiDrawer-paperAnchorDockedLeft",
              "paperAnchorDockedRight": "MuiDrawer-paperAnchorDockedRight",
              "paperAnchorDockedTop": "MuiDrawer-paperAnchorDockedTop",
              "paperAnchorLeft": "MuiDrawer-paperAnchorLeft",
              "paperAnchorRight": "MuiDrawer-paperAnchorRight",
              "paperAnchorTop": "MuiDrawer-paperAnchorTop",
              "root": "MuiDrawer-root",
            }
          }
          variant="permanent"
        >
          <div
            className="MuiDrawer-root MuiDrawer-docked"
          >
            <WithStyles(ForwardRef(Paper))
              className="MuiDrawer-paper makeStyles-paper-4 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
              elevation={0}
              square={true}
            >
              <ForwardRef(Paper)
                className="MuiDrawer-paper makeStyles-paper-4 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft"
                classes={
                  Object {
                    "elevation0": "MuiPaper-elevation0",
                    "elevation1": "MuiPaper-elevation1",
                    "elevation10": "MuiPaper-elevation10",
                    "elevation11": "MuiPaper-elevation11",
                    "elevation12": "MuiPaper-elevation12",
                    "elevation13": "MuiPaper-elevation13",
                    "elevation14": "MuiPaper-elevation14",
                    "elevation15": "MuiPaper-elevation15",
                    "elevation16": "MuiPaper-elevation16",
                    "elevation17": "MuiPaper-elevation17",
                    "elevation18": "MuiPaper-elevation18",
                    "elevation19": "MuiPaper-elevation19",
                    "elevation2": "MuiPaper-elevation2",
                    "elevation20": "MuiPaper-elevation20",
                    "elevation21": "MuiPaper-elevation21",
                    "elevation22": "MuiPaper-elevation22",
                    "elevation23": "MuiPaper-elevation23",
                    "elevation24": "MuiPaper-elevation24",
                    "elevation3": "MuiPaper-elevation3",
                    "elevation4": "MuiPaper-elevation4",
                    "elevation5": "MuiPaper-elevation5",
                    "elevation6": "MuiPaper-elevation6",
                    "elevation7": "MuiPaper-elevation7",
                    "elevation8": "MuiPaper-elevation8",
                    "elevation9": "MuiPaper-elevation9",
                    "outlined": "MuiPaper-outlined",
                    "root": "MuiPaper-root",
                    "rounded": "MuiPaper-rounded",
                  }
                }
                elevation={0}
                square={true}
              >
                <div
                  className="MuiPaper-root MuiDrawer-paper makeStyles-paper-4 MuiDrawer-paperAnchorLeft MuiDrawer-paperAnchorDockedLeft MuiPaper-elevation0"
                >
                  <ForwardRef(MenuList)
                    style={
                      Object {
                        "color": "#fff",
                        "width": "250px",
                      }
                    }
                  >
                    <WithStyles(ForwardRef(List))
                      onKeyDown={[Function]}
                      role="menu"
                      style={
                        Object {
                          "color": "#fff",
                          "width": "250px",
                        }
                      }
                      tabIndex={-1}
                    >
                      <ForwardRef(List)
                        classes={
                          Object {
                            "dense": "MuiList-dense",
                            "padding": "MuiList-padding",
                            "root": "MuiList-root",
                            "subheader": "MuiList-subheader",
                          }
                        }
                        onKeyDown={[Function]}
                        role="menu"
                        style={
                          Object {
                            "color": "#fff",
                            "width": "250px",
                          }
                        }
                        tabIndex={-1}
                      >
                        <ul
                          className="MuiList-root MuiList-padding"
                          onKeyDown={[Function]}
                          role="menu"
                          style={
                            Object {
                              "color": "#fff",
                              "width": "250px",
                            }
                          }
                          tabIndex={-1}
                        >
                          <WithStyles(ForwardRef(ListItem))
                            key=".0"
                            tabIndex={0}
                          >
                            <ForwardRef(ListItem)
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              tabIndex={0}
                            >
                              <li
                                className="MuiListItem-root MuiListItem-gutters"
                                disabled={false}
                                tabIndex={0}
                              >
                                <img
                                  alt=""
                                  key=".0"
                                  src="DMsrsquare.png"
                                  style={
                                    Object {
                                      "height": "113px",
                                      "margin": "10px 5px 15px 17px",
                                    }
                                  }
                                />
                              </li>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            className=""
                            data-test-id="dicom-preview"
                            key=".1"
                            onClick={[Function]}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              className=""
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              data-test-id="dicom-preview"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                component="div"
                                data-test-id="dicom-preview"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  data-test-id="dicom-preview"
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                    data-test-id="dicom-preview"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <ForwardRef
                                      key=".0"
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 0 5px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 0 5px",
                                          }
                                        }
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          style={
                                            Object {
                                              "color": "#707070",
                                              "padding": "0 0 0 5px",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            style={
                                              Object {
                                                "color": "#707070",
                                                "padding": "0 0 0 5px",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Typography))
                                      component="p"
                                      key=".1"
                                      style={
                                        Object {
                                          "padding": "0 0 0 15px",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="p"
                                        style={
                                          Object {
                                            "padding": "0 0 0 15px",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                          style={
                                            Object {
                                              "padding": "0 0 0 15px",
                                            }
                                          }
                                        >
                                          DICOM Preview
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            className=""
                            data-test-id="pdf-preview"
                            key=".2"
                            onClick={[Function]}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              className=""
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              data-test-id="pdf-preview"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                component="div"
                                data-test-id="pdf-preview"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  data-test-id="pdf-preview"
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                    data-test-id="pdf-preview"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <ForwardRef
                                      key=".0"
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 0 5px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 0 5px",
                                          }
                                        }
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          style={
                                            Object {
                                              "color": "#707070",
                                              "padding": "0 0 0 5px",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            style={
                                              Object {
                                                "color": "#707070",
                                                "padding": "0 0 0 5px",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M3 13h8V3H3v10zm0 8h8v-6H3v6zm10 0h8V11h-8v10zm0-18v6h8V3h-8z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Typography))
                                      component="p"
                                      key=".1"
                                      style={
                                        Object {
                                          "padding": "0 0 0 15px",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="p"
                                        style={
                                          Object {
                                            "padding": "0 0 0 15px",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                          style={
                                            Object {
                                              "padding": "0 0 0 15px",
                                            }
                                          }
                                        >
                                          PDF Preview
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            className=""
                            data-test-id="batch-preview"
                            key=".3"
                            onClick={[Function]}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              className=""
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              data-test-id="batch-preview"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                component="div"
                                data-test-id="batch-preview"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  data-test-id="batch-preview"
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                    data-test-id="batch-preview"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <ForwardRef
                                      key=".0"
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 0 5px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 0 5px",
                                          }
                                        }
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          style={
                                            Object {
                                              "color": "#707070",
                                              "padding": "0 0 0 5px",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            style={
                                              Object {
                                                "color": "#707070",
                                                "padding": "0 0 0 5px",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Typography))
                                      component="p"
                                      key=".1"
                                      style={
                                        Object {
                                          "padding": "0 0 0 15px",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="p"
                                        style={
                                          Object {
                                            "padding": "0 0 0 15px",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                          style={
                                            Object {
                                              "padding": "0 0 0 15px",
                                            }
                                          }
                                        >
                                          Batch Preview
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            className=""
                            data-test-id="batch-process"
                            key=".4"
                            onClick={[Function]}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              className=""
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              data-test-id="batch-process"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                component="div"
                                data-test-id="batch-process"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  data-test-id="batch-process"
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                    data-test-id="batch-process"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <ForwardRef
                                      key=".0"
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 0 5px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 0 5px",
                                          }
                                        }
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          style={
                                            Object {
                                              "color": "#707070",
                                              "padding": "0 0 0 5px",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            style={
                                              Object {
                                                "color": "#707070",
                                                "padding": "0 0 0 5px",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Typography))
                                      component="p"
                                      key=".1"
                                      style={
                                        Object {
                                          "padding": "0 0 0 15px",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="p"
                                        style={
                                          Object {
                                            "padding": "0 0 0 15px",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                          style={
                                            Object {
                                              "padding": "0 0 0 15px",
                                            }
                                          }
                                        >
                                          Batch Process
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            className=""
                            data-test-id="review-tags"
                            key=".5"
                            onClick={[Function]}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              className=""
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              data-test-id="review-tags"
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                component="div"
                                data-test-id="review-tags"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  data-test-id="review-tags"
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                    data-test-id="review-tags"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <ForwardRef
                                      key=".0"
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 0 5px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 0 5px",
                                          }
                                        }
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          style={
                                            Object {
                                              "color": "#707070",
                                              "padding": "0 0 0 5px",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            style={
                                              Object {
                                                "color": "#707070",
                                                "padding": "0 0 0 5px",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M3 18h12v-2H3v2zM3 6v2h18V6H3zm0 7h18v-2H3v2z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Typography))
                                      component="p"
                                      key=".1"
                                      style={
                                        Object {
                                          "padding": "0 0 0 15px",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="p"
                                        style={
                                          Object {
                                            "padding": "0 0 0 15px",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                          style={
                                            Object {
                                              "padding": "0 0 0 15px",
                                            }
                                          }
                                        >
                                          Review Tags
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                        </ul>
                      </ForwardRef(List)>
                    </WithStyles(ForwardRef(List))>
                  </ForwardRef(MenuList)>
                  <ForwardRef(MenuList)
                    style={
                      Object {
                        "bottom": 0,
                        "color": "#fff",
                        "position": "absolute",
                        "width": "250px",
                      }
                    }
                  >
                    <WithStyles(ForwardRef(List))
                      onKeyDown={[Function]}
                      role="menu"
                      style={
                        Object {
                          "bottom": 0,
                          "color": "#fff",
                          "position": "absolute",
                          "width": "250px",
                        }
                      }
                      tabIndex={-1}
                    >
                      <ForwardRef(List)
                        classes={
                          Object {
                            "dense": "MuiList-dense",
                            "padding": "MuiList-padding",
                            "root": "MuiList-root",
                            "subheader": "MuiList-subheader",
                          }
                        }
                        onKeyDown={[Function]}
                        role="menu"
                        style={
                          Object {
                            "bottom": 0,
                            "color": "#fff",
                            "position": "absolute",
                            "width": "250px",
                          }
                        }
                        tabIndex={-1}
                      >
                        <ul
                          className="MuiList-root MuiList-padding"
                          onKeyDown={[Function]}
                          role="menu"
                          style={
                            Object {
                              "bottom": 0,
                              "color": "#fff",
                              "position": "absolute",
                              "width": "250px",
                            }
                          }
                          tabIndex={-1}
                        >
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            className=""
                            data-test-id="faqs"
                            key=".0"
                            onClick={[Function]}
                            tabIndex={0}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              className=""
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              data-test-id="faqs"
                              onClick={[Function]}
                              tabIndex={0}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                component="div"
                                data-test-id="faqs"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                                tabIndex={0}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  data-test-id="faqs"
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                  tabIndex={0}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                    data-test-id="faqs"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <ForwardRef
                                      key=".0"
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 0 5px",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 0 5px",
                                          }
                                        }
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          style={
                                            Object {
                                              "color": "#707070",
                                              "padding": "0 0 0 5px",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            style={
                                              Object {
                                                "color": "#707070",
                                                "padding": "0 0 0 5px",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Typography))
                                      component="p"
                                      key=".1"
                                      style={
                                        Object {
                                          "padding": "0 0 0 15px",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="p"
                                        style={
                                          Object {
                                            "padding": "0 0 0 15px",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                          style={
                                            Object {
                                              "padding": "0 0 0 15px",
                                            }
                                          }
                                        >
                                          VAULT
                                          <sup>
                                            TM
                                          </sup>
                                           FAQs
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            button={true}
                            key=".1"
                            onClick={[Function]}
                          >
                            <ForwardRef(ListItem)
                              button={true}
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                              onClick={[Function]}
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                component="div"
                                disabled={false}
                                focusVisibleClassName="Mui-focusVisible"
                                onClick={[Function]}
                              >
                                <ForwardRef(ButtonBase)
                                  className="MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  component="div"
                                  disabled={false}
                                  focusVisibleClassName="Mui-focusVisible"
                                  onClick={[Function]}
                                >
                                  <div
                                    aria-disabled={false}
                                    className="MuiButtonBase-root MuiListItem-root MuiListItem-gutters MuiListItem-button"
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    <span
                                      key=".0"
                                      style={
                                        Object {
                                          "marginLeft": "5px",
                                        }
                                      }
                                    >
                                       
                                        
                                    </span>
                                    <ForwardRef
                                      key=".1"
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 5px 5px",
                                          "transform": "rotate(-180deg)",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(SvgIcon))
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 5px 5px",
                                            "transform": "rotate(-180deg)",
                                          }
                                        }
                                      >
                                        <ForwardRef(SvgIcon)
                                          classes={
                                            Object {
                                              "colorAction": "MuiSvgIcon-colorAction",
                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                              "colorError": "MuiSvgIcon-colorError",
                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                              "root": "MuiSvgIcon-root",
                                            }
                                          }
                                          style={
                                            Object {
                                              "color": "#707070",
                                              "padding": "0 0 5px 5px",
                                              "transform": "rotate(-180deg)",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden={true}
                                            className="MuiSvgIcon-root"
                                            focusable="false"
                                            style={
                                              Object {
                                                "color": "#707070",
                                                "padding": "0 0 5px 5px",
                                                "transform": "rotate(-180deg)",
                                              }
                                            }
                                            viewBox="0 0 24 24"
                                          >
                                            <path
                                              d="M10.09 15.59L11.5 17l5-5-5-5-1.41 1.41L12.67 11H3v2h9.67l-2.58 2.59zM19 3H5c-1.11 0-2 .9-2 2v4h2V5h14v14H5v-4H3v4c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                            />
                                          </svg>
                                        </ForwardRef(SvgIcon)>
                                      </WithStyles(ForwardRef(SvgIcon))>
                                    </ForwardRef>
                                    <WithStyles(ForwardRef(Typography))
                                      component="p"
                                      key=".2"
                                      style={
                                        Object {
                                          "padding": "10px 0 0 10px",
                                        }
                                      }
                                      variant="subtitle1"
                                    >
                                      <ForwardRef(Typography)
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="p"
                                        style={
                                          Object {
                                            "padding": "10px 0 0 10px",
                                          }
                                        }
                                        variant="subtitle1"
                                      >
                                        <p
                                          className="MuiTypography-root MuiTypography-subtitle1"
                                          style={
                                            Object {
                                              "padding": "10px 0 0 10px",
                                            }
                                          }
                                        >
                                          Logout
                                        </p>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                    <WithStyles(memo)
                                      center={false}
                                    >
                                      <ForwardRef(TouchRipple)
                                        center={false}
                                        classes={
                                          Object {
                                            "child": "MuiTouchRipple-child",
                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                            "ripple": "MuiTouchRipple-ripple",
                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                            "root": "MuiTouchRipple-root",
                                          }
                                        }
                                      >
                                        <span
                                          className="MuiTouchRipple-root"
                                        >
                                          <TransitionGroup
                                            childFactory={[Function]}
                                            component={null}
                                            exit={true}
                                          />
                                        </span>
                                      </ForwardRef(TouchRipple)>
                                    </WithStyles(memo)>
                                  </div>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                          <WithStyles(ForwardRef(ListItem))
                            key=".2"
                          >
                            <ForwardRef(ListItem)
                              classes={
                                Object {
                                  "alignItemsFlexStart": "MuiListItem-alignItemsFlexStart",
                                  "button": "MuiListItem-button",
                                  "container": "MuiListItem-container",
                                  "dense": "MuiListItem-dense",
                                  "disabled": "Mui-disabled",
                                  "divider": "MuiListItem-divider",
                                  "focusVisible": "Mui-focusVisible",
                                  "gutters": "MuiListItem-gutters",
                                  "root": "MuiListItem-root",
                                  "secondaryAction": "MuiListItem-secondaryAction",
                                  "selected": "Mui-selected",
                                }
                              }
                            >
                              <li
                                className="MuiListItem-root MuiListItem-gutters"
                                disabled={false}
                              >
                                <span
                                  key=".0"
                                  style={
                                    Object {
                                      "marginTop": "5px",
                                    }
                                  }
                                >
                                   
                                    
                                </span>
                                <ForwardRef
                                  key=".1"
                                  style={
                                    Object {
                                      "color": "#707070",
                                      "padding": "0 0 0 5px",
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(SvgIcon))
                                    style={
                                      Object {
                                        "color": "#707070",
                                        "padding": "0 0 0 5px",
                                      }
                                    }
                                  >
                                    <ForwardRef(SvgIcon)
                                      classes={
                                        Object {
                                          "colorAction": "MuiSvgIcon-colorAction",
                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                          "colorError": "MuiSvgIcon-colorError",
                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                          "root": "MuiSvgIcon-root",
                                        }
                                      }
                                      style={
                                        Object {
                                          "color": "#707070",
                                          "padding": "0 0 0 5px",
                                        }
                                      }
                                    >
                                      <svg
                                        aria-hidden={true}
                                        className="MuiSvgIcon-root"
                                        focusable="false"
                                        style={
                                          Object {
                                            "color": "#707070",
                                            "padding": "0 0 0 5px",
                                          }
                                        }
                                        viewBox="0 0 24 24"
                                      >
                                        <path
                                          d="M11.99 18.54l-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27-7.38 5.74zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16z"
                                        />
                                      </svg>
                                    </ForwardRef(SvgIcon)>
                                  </WithStyles(ForwardRef(SvgIcon))>
                                </ForwardRef>
                                <WithStyles(ForwardRef(Typography))
                                  component="p"
                                  key=".2"
                                  style={
                                    Object {
                                      "padding": "5px 0 0 15px",
                                    }
                                  }
                                  variant="subtitle1"
                                >
                                  <ForwardRef(Typography)
                                    classes={
                                      Object {
                                        "alignCenter": "MuiTypography-alignCenter",
                                        "alignJustify": "MuiTypography-alignJustify",
                                        "alignLeft": "MuiTypography-alignLeft",
                                        "alignRight": "MuiTypography-alignRight",
                                        "body1": "MuiTypography-body1",
                                        "body2": "MuiTypography-body2",
                                        "button": "MuiTypography-button",
                                        "caption": "MuiTypography-caption",
                                        "colorError": "MuiTypography-colorError",
                                        "colorInherit": "MuiTypography-colorInherit",
                                        "colorPrimary": "MuiTypography-colorPrimary",
                                        "colorSecondary": "MuiTypography-colorSecondary",
                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                        "displayBlock": "MuiTypography-displayBlock",
                                        "displayInline": "MuiTypography-displayInline",
                                        "gutterBottom": "MuiTypography-gutterBottom",
                                        "h1": "MuiTypography-h1",
                                        "h2": "MuiTypography-h2",
                                        "h3": "MuiTypography-h3",
                                        "h4": "MuiTypography-h4",
                                        "h5": "MuiTypography-h5",
                                        "h6": "MuiTypography-h6",
                                        "noWrap": "MuiTypography-noWrap",
                                        "overline": "MuiTypography-overline",
                                        "paragraph": "MuiTypography-paragraph",
                                        "root": "MuiTypography-root",
                                        "srOnly": "MuiTypography-srOnly",
                                        "subtitle1": "MuiTypography-subtitle1",
                                        "subtitle2": "MuiTypography-subtitle2",
                                      }
                                    }
                                    component="p"
                                    style={
                                      Object {
                                        "padding": "5px 0 0 15px",
                                      }
                                    }
                                    variant="subtitle1"
                                  >
                                    <p
                                      className="MuiTypography-root MuiTypography-subtitle1"
                                      style={
                                        Object {
                                          "padding": "5px 0 0 15px",
                                        }
                                      }
                                    >
                                      Version 0.1.1
                                    </p>
                                  </ForwardRef(Typography)>
                                </WithStyles(ForwardRef(Typography))>
                              </li>
                            </ForwardRef(ListItem)>
                          </WithStyles(ForwardRef(ListItem))>
                        </ul>
                      </ForwardRef(List)>
                    </WithStyles(ForwardRef(List))>
                  </ForwardRef(MenuList)>
                </div>
              </ForwardRef(Paper)>
            </WithStyles(ForwardRef(Paper))>
          </div>
        </ForwardRef(Drawer)>
      </WithStyles(ForwardRef(Drawer))>
      <div
        style={
          Object {
            "margin": "50px 100px 100px  350px",
          }
        }
      >
        <Switch />
        <div
          className="makeStyles-dataPolicyContainer-9"
        >
          <DataPolicy>
            <WithStyles(ForwardRef(Alert))
              severity="info"
              variant="outlined"
            >
              <ForwardRef(Alert)
                classes={
                  Object {
                    "action": "MuiAlert-action",
                    "filledError": "MuiAlert-filledError",
                    "filledInfo": "MuiAlert-filledInfo",
                    "filledSuccess": "MuiAlert-filledSuccess",
                    "filledWarning": "MuiAlert-filledWarning",
                    "icon": "MuiAlert-icon",
                    "message": "MuiAlert-message",
                    "outlinedError": "MuiAlert-outlinedError",
                    "outlinedInfo": "MuiAlert-outlinedInfo",
                    "outlinedSuccess": "MuiAlert-outlinedSuccess",
                    "outlinedWarning": "MuiAlert-outlinedWarning",
                    "root": "MuiAlert-root",
                    "standardError": "MuiAlert-standardError",
                    "standardInfo": "MuiAlert-standardInfo",
                    "standardSuccess": "MuiAlert-standardSuccess",
                    "standardWarning": "MuiAlert-standardWarning",
                  }
                }
                severity="info"
                variant="outlined"
              >
                <WithStyles(ForwardRef(Paper))
                  className="MuiAlert-root MuiAlert-outlinedInfo"
                  elevation={0}
                  role="alert"
                  square={true}
                >
                  <ForwardRef(Paper)
                    className="MuiAlert-root MuiAlert-outlinedInfo"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "outlined": "MuiPaper-outlined",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                    elevation={0}
                    role="alert"
                    square={true}
                  >
                    <div
                      className="MuiPaper-root MuiAlert-root MuiAlert-outlinedInfo MuiPaper-elevation0"
                      role="alert"
                    >
                      <div
                        className="MuiAlert-icon"
                      >
                        <ForwardRef(InfoOutlinedIcon)
                          fontSize="inherit"
                        >
                          <WithStyles(ForwardRef(SvgIcon))
                            fontSize="inherit"
                          >
                            <ForwardRef(SvgIcon)
                              classes={
                                Object {
                                  "colorAction": "MuiSvgIcon-colorAction",
                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                  "colorError": "MuiSvgIcon-colorError",
                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                  "root": "MuiSvgIcon-root",
                                }
                              }
                              fontSize="inherit"
                            >
                              <svg
                                aria-hidden={true}
                                className="MuiSvgIcon-root MuiSvgIcon-fontSizeInherit"
                                focusable="false"
                                viewBox="0 0 24 24"
                              >
                                <path
                                  d="M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z"
                                />
                              </svg>
                            </ForwardRef(SvgIcon)>
                          </WithStyles(ForwardRef(SvgIcon))>
                        </ForwardRef(InfoOutlinedIcon)>
                      </div>
                      <div
                        className="MuiAlert-message"
                      >
                        <span
                          style={
                            Object {
                              "color": "#277c89",
                            }
                          }
                        >
                           
                          Data that is not anonymized will never be stored on VAULT
                          <sup>
                            TM
                          </sup>
                           server
                        </span>
                      </div>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </ForwardRef(Alert)>
            </WithStyles(ForwardRef(Alert))>
          </DataPolicy>
        </div>
      </div>
    </main>
  </div>
</Dashboard>
`;
